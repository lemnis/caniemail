import { Test } from "./a11ysupport.test";

/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export interface Feature {
	id?: string;
	title: string;
	description: string;
	related_issues?: {
		title: string;
		url: string;
	}[];
	/**
	 * Key words that are used to help find features in a search
	 */
	keywords?: string[];
	recommendation?: string;
	references?: {
		title: string;
		url: string;
	}[];
	tests: Test[],
	assertions?: Assertion[];
	date_updated: string;
}

/**
 * This interface was referenced by `Demo`'s JSON-Schema
 * via the `definition` "assertion".
 */
export interface Assertion {
	id?:
		| "convey_name"
		| "convey_role"
		| "convey_value"
		| "convey_change_in_value"
		| "convey_change_in_state"
		| "convey_boundaries"
		| "content_navigable"
		| "convey_posinset"
		| "convey_nesting_level"
		| "convey_boolean_property"
		| "provide_shortcuts"
		| "convey_setsize"
		| "allow_data_entry"
		| string;
	title?: string;
	strength?: {
		sr:
			| "MUST"
			| "SHOULD"
			| "MAY"
			| "MUST NOT"
			| "SHOULD NOT"
			| "MAY NOT"
			| "NA";
		vc:
			| "MUST"
			| "SHOULD"
			| "MAY"
			| "MUST NOT"
			| "SHOULD NOT"
			| "MAY NOT"
			| "NA";
	};
	/**
	 * The strategy for determining if output rows pass. Defaults to 'any' which means that only one output row needs to pass. 'all' means that all output rows must pass.
	 */
	pass_strategy?: "any" | "all";
	preconditions?: string[];
	operation_modes?: ("sr/reading" | "sr/interaction" | "vc")[];
	/**
	 * A css selector that determines which elements in the example need to be tested. This should be a generic selector, and can be overridden by tests that reference this assertion.
	 */
	css_target?: string;
	/**
	 * an object of AT ids as keys and rationale as values. The presence of a key indicates that the AT is not applicable for the given reason. An example might be vc_ios on the convey_role assertion since vc_ios intentionally does not support this.
	 */
	exclude_at?: {
		[k: string]: unknown | undefined;
	};
	/**
	 * an object of browser ids as keys and rationale as values. The presence of a key indicates that the browser is not applicable for the given reason. An example might be that IE does not support an html5 form control.
	 */
	exclude_browsers?: {
		[k: string]: unknown | undefined;
	};
}
