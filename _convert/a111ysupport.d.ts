/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type TheDescriptionSchema = string;

export interface ExampleSchema {
	id: string;
	title: string;
	description: TheDescriptionSchema;
	related_issues?: Url[];
	/**
	 * Key words that are used to help find features in a search
	 */
	keywords?: string[];
	keywords_string?: string;
	recommendation?: string;
	references?: Url[];
	assertions?: Assertion[];
	date_updated: string;
}
export interface Url {
	title: string;
	url: string;
	[k: string]: unknown;
}
export interface Assertion {
	id: string;
	title: string;
	/**
	 * the RFC 2119 value of requirement level. only 'MUST' assertions will contribute to core support values
	 */
	strength: {
		/**
		 * the RFC 2119 value of requirement level. only 'MUST' assertions will contribute to core support values
		 */
		sr: string;
		/**
		 * the RFC 2119 value of requirement level. only 'MUST' assertions will contribute to core support values
		 */
		vc: string;
		[k: string]: unknown;
	};
	/**
	 * The strategy for determining if output rows pass. Defaults to 'any' which means that only one output row needs to pass. 'all' means that all output rows must pass.
	 */
	pass_strategy: string;
	preconditions?: string[];
	operation_modes: ("sr/reading" | "sr/interaction" | "vc")[];
	supports_at?: ("sr" | "vc")[];
	/**
	 * A css selector that determines which elements in the example need to be tested. This should be a generic selector, and can be overridden by tests that reference this assertion.
	 */
	css_target: string;
	/**
	 * an object of AT ids as keys and rationale as values. The presence of a key indicates that the AT is not applicable for the given reason. An example might be vc_ios on the convey_role assertion since vc_ios intentionally does not support this.
	 */
	exclude_at?: {
		[k: string]: unknown;
	};
	/**
	 * an object of browser ids as keys and rationale as values. The presence of a key indicates that the browser is not applicable for the given reason. An example might be that IE does not support an html5 form control.
	 */
	exclude_browsers?: {
		[k: string]: unknown;
	};
	[k: string]: unknown;
}
